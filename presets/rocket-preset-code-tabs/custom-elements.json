{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "rocket-preset-code-tabs.js",
      "declarations": [
        {
          "kind": "function",
          "name": "codeTabs",
          "parameters": [
            {
              "name": "options",
              "description": "tab collections",
              "type": {
                "text": "CodeTabsOptions"
              }
            }
          ],
          "description": "Set up code tabs rocket preset",
          "return": {
            "type": {
              "text": "RocketPreset"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "codeTabs",
          "declaration": {
            "name": "codeTabs",
            "module": "rocket-preset-code-tabs.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/code-copy.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CodeCopy",
          "cssProperties": [
            {
              "description": "button background",
              "name": "--code-button-background",
              "default": "transparent"
            },
            {
              "description": "button text color",
              "name": "--code-button-color",
              "default": "inherit"
            },
            {
              "description": "button background when focused",
              "name": "--code-button-focus-background",
              "default": "hsla(0 100% 0% / 0.75)"
            },
            {
              "description": "button text color when focused",
              "name": "--code-button-focus-color",
              "default": "hsla(0 100% 100% / 0.75)"
            }
          ],
          "cssParts": [
            {
              "description": "copy button",
              "name": "copy-button"
            }
          ],
          "slots": [
            {
              "description": "Button content",
              "name": "copy-icon"
            },
            {
              "description": "Button content which alerts on copying. Use `role=\"alert\"` if overriding default.",
              "name": "success-icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'code-copy'"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[ButtonStyles, CopyStyles]"
            },
            {
              "kind": "field",
              "name": "copyIcon",
              "static": true,
              "default": "html`\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n      <!-- Copyright Github, license MIT -->\n      <path fill-rule=\"evenodd\" d=\"M5.962 2.513a.75.75 0 01-.475.949l-.816.272a.25.25 0 00-.171.237V21.25c0 .138.112.25.25.25h14.5a.25.25 0 00.25-.25V3.97a.25.25 0 00-.17-.236l-.817-.272a.75.75 0 01.474-1.424l.816.273A1.75 1.75 0 0121 3.97v17.28A1.75 1.75 0 0119.25 23H4.75A1.75 1.75 0 013 21.25V3.97a1.75 1.75 0 011.197-1.66l.816-.272a.75.75 0 01.949.475z\"/>\n      <path fill-rule=\"evenodd\" d=\"M7 1.75C7 .784 7.784 0 8.75 0h6.5C16.216 0 17 .784 17 1.75v1.5A1.75 1.75 0 0115.25 5h-6.5A1.75 1.75 0 017 3.25v-1.5zm1.75-.25a.25.25 0 00-.25.25v1.5c0 .138.112.25.25.25h6.5a.25.25 0 00.25-.25v-1.5a.25.25 0 00-.25-.25h-6.5z\"/>\n    </svg>\n  `"
            },
            {
              "kind": "field",
              "name": "success",
              "type": {
                "text": "string"
              },
              "default": "'pending'"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "number"
              },
              "default": "2000"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "onCopy",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            }
          ],
          "events": [
            {
              "name": "copy",
              "type": {
                "text": "CustomEvent<string>"
              },
              "description": "when successfully copying"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeCopy",
          "declaration": {
            "name": "CodeCopy",
            "module": "components/code-copy.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/code-tabs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CodeTabs",
          "cssProperties": [
            {
              "description": "size of the tab icon",
              "name": "--code-tabs-icon-height"
            },
            {
              "description": "background for the tablist",
              "name": "--code-tabs-tabs-background"
            },
            {
              "description": "flex justification for tab buttons",
              "name": "--code-tabs-justify-tabs"
            },
            {
              "description": "content and selected button background",
              "name": "--code-tabs-background"
            },
            {
              "description": "tabpanel background",
              "name": "--code-tabs-tabpanel-background"
            },
            {
              "description": "tabpanel minimum height",
              "name": "--code-tabs-min-height"
            },
            {
              "description": "color for selected tab highlight",
              "name": "--code-tabs-selected-highlight-color"
            },
            {
              "description": "tab button background",
              "name": "--code-button-background",
              "default": "transparent"
            },
            {
              "description": "tab button text color",
              "name": "--code-button-color",
              "default": "inherit"
            },
            {
              "description": "tab button background when focused",
              "name": "--code-button-focus-background",
              "default": "hsla(0 100% 0% / 0.75)"
            },
            {
              "description": "tab button text color when focused",
              "name": "--code-button-focus-color",
              "default": "hsla(0 100% 100% / 0.75)"
            }
          ],
          "cssParts": [
            {
              "description": "container for tab buttons",
              "name": "tablist"
            },
            {
              "description": "container for content",
              "name": "tabpanel"
            },
            {
              "description": "tab button",
              "name": "tab"
            },
            {
              "description": "container for default tab",
              "name": "default-container"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "allowedChildren",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "['code-tab']"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[ButtonStyles, TabsStyles]"
            },
            {
              "kind": "field",
              "name": "labels",
              "privacy": "private",
              "default": "new Map<string, Tab>()"
            },
            {
              "kind": "field",
              "name": "tabs",
              "type": {
                "text": "NodeListOf<HTMLButtonElement>"
              },
              "description": "The tab buttons."
            },
            {
              "kind": "field",
              "name": "defaultTab",
              "type": {
                "text": "string"
              },
              "description": "Which tab name to treat as default, in case the use has not yet made a selection."
            },
            {
              "kind": "field",
              "name": "collection",
              "type": {
                "text": "string"
              },
              "description": "Which tab collection to use."
            },
            {
              "kind": "field",
              "name": "initialSelectedIndex",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "changed",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updated",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changed",
                  "type": {
                    "text": "PropertyValues<this>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getInitialSelectedIndex",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<number>"
                }
              }
            },
            {
              "kind": "method",
              "name": "initCollection",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "selectId",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "idToSelect",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSelect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onClickTab",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLButtonElement }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tag",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initLabels",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "optional": true,
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onClickTab"
            }
          ],
          "mixins": [
            {
              "name": "SelectMixin",
              "package": "@pwrs/mixins/select/select-mixin"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "CodeTab",
          "cssProperties": [
            {
              "description": "copy button background",
              "name": "--code-button-background",
              "default": "transparent"
            },
            {
              "description": "copy button text color",
              "name": "--code-button-color",
              "default": "inherit"
            },
            {
              "description": "copy button background when focused",
              "name": "--code-button-focus-background",
              "default": "hsla(0 100% 0% / 0.75)"
            },
            {
              "description": "copy button text color when focused",
              "name": "--code-button-focus-color",
              "default": "hsla(0 100% 100% / 0.75)"
            }
          ],
          "cssParts": [
            {
              "description": "container for tab content",
              "name": "content"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[TabStyles]"
            },
            {
              "kind": "field",
              "name": "tab",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "noCopy",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeTabs",
          "declaration": {
            "name": "CodeTabs",
            "module": "components/code-tabs.ts"
          }
        },
        {
          "kind": "js",
          "name": "CodeTab",
          "declaration": {
            "name": "CodeTab",
            "module": "components/code-tabs.ts"
          }
        }
      ]
    }
  ]
}
